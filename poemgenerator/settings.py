"""
Django settings for poemgenerator project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import environ
import os

# Initialize environ
env = environ.Env(
    DEBUG=(bool, False),
)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Read .env file
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY', default='your-default-secret-key-here')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = env.list('ALLOWED_HOSTS', default=[
    'localhost',
    '127.0.0.1',
    '.ngrok-free.app',
])

# Debug: print ALLOWED_HOSTS to verify
print(f"ALLOWED_HOSTS: {ALLOWED_HOSTS}")

CSRF_TRUSTED_ORIGINS = [
    'https://gedichtgpt.nl',
    'https://*.ngrok-free.app',
]

# Controleer of CSRF_TRUSTED_ORIGINS correct is ingesteld
if not CSRF_TRUSTED_ORIGINS:
    CSRF_TRUSTED_ORIGINS = ['https://gedichtgpt.nl']

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "poems",
    "crispy_forms",
    "crispy_bootstrap5",
    "corsheaders",
]

MIDDLEWARE = [  
    "django.middleware.security.SecurityMiddleware",  
    "whitenoise.middleware.WhiteNoiseMiddleware",   # <-- here
    "corsheaders.middleware.CorsMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",  
    "django.middleware.common.CommonMiddleware",  
    "django.middleware.csrf.CsrfViewMiddleware",  
    "django.contrib.auth.middleware.AuthenticationMiddleware",  
    "django.contrib.messages.middleware.MessageMiddleware",  
    "django.middleware.clickjacking.XFrameOptionsMiddleware",  
]

ROOT_URLCONF = "poemgenerator.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, 'templates')],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "poemgenerator.wsgi.application"

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': env.db(default='sqlite:///db.sqlite3')
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = env.str('STATIC_URL', default='/static/')
STATIC_ROOT = os.path.join(BASE_DIR, 'static/')

MEDIA_ROOT = env.str('MEDIA_ROOT', default=str(BASE_DIR / 'media'))
MEDIA_URL = env.str('MEDIA_URL', default='/media/')

WHITENOISE_USE_FINDERS = True
WHITENOISE_AUTOREFRESH = DEBUG

# Crispy Forms settings
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"

# Rate limiting settings
RATELIMIT_ENABLE = True
RATELIMIT_USE_CACHE = 'default'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# OpenAI settings
from dotenv import load_dotenv
import os

# Laad het .env-bestand
load_dotenv()

# Lees de OpenAI API-key uit de omgeving
OPENAI_API_KEY = os.getenv('OPENAI_API_KEY')


LOGGING = {  
    "version": 1,  
    "disable_existing_loggers": False,  
    "handlers": {"console": {"class": "logging.StreamHandler"}},  
    "loggers": {"": {"handlers": ["console"], "level": "DEBUG"}},  
}

# settings.py
STRIPE_PUBLIC_KEY = 'pk_test_51N5BPdCAxCUhnhuH0DT18MasGbnlXlrzOeQbo7X7hZH4aS9TPQGG37sbXAxYAQFVDtlUv9iPepiK6fA5zrDxI1Fx00gINAKr9u'
STRIPE_SECRET_KEY = 'sk_test_51N5BPdCAxCUhnhuHTZGsm791sXBQUiLEl2sFcrXU9vKhJ2g6KEF9aO7UMdnz7iDTEajl00jqC10bBV0vkZbbwJtr00PClMUgaL'
STRIPE_WEBHOOK_SECRET = 'whsec_NPhpUqW32Bv3JS4BJsFGOG0vMaHb7DlA'

# CORS settings
CORS_ALLOWED_ORIGINS = [
    'https://gedichtgpt.nl',
    'http://localhost:8000',
    'http://127.0.0.1:8000',
]

CORS_ALLOW_CREDENTIALS = True
CORS_ALLOWED_ORIGIN_REGEXES = [
    r"^https://.*\.ngrok-free\.app$",
]

# Authentication settings
LOGIN_REDIRECT_URL = '/'  # Redirect naar homepage na inloggen
LOGOUT_REDIRECT_URL = '/'  # Redirect naar homepage na uitloggen
LOGIN_URL = 'login'  # URL voor de login pagina
